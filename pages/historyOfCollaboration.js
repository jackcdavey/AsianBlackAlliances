import React from 'react'
// import type { NextPage } from 'next'
import Head from 'next/head'
import { useState } from 'react'

import { createClient } from 'next-sanity'

// import styles from '../styles/Home.module.css'
import Header from '../public/components/header'
import Footer from '../public/components/footer.js'
import Layout from '../public/components/layout'

import dynamic from 'next/dynamic'

import { Typography, Button, Paper, Box, FormControl, InputLabel, MenuItem, Select } from '@mui/material';



import Grid from '@mui/material/Grid';

import {
  Timeline,
  TimelineItem,
  TimelineDot,
  TimelineSeparator,
  TimelineConnector,
  TimelineContent,
  TimelineOppositeContent
} from '@mui/lab';

import CollaborationMap from '../public/components/collaborationMap.js'

const ReactTooltip = dynamic(() => import('react-tooltip'), { ssr: false });

// import Tooltip from '@mui/material/Tooltip'

// const ReactToolTip = dynamic(() => import('react-tooltip'), { ssr : false });


const client = createClient({
  projectId: 'hiagtp2f',
  dataset: 'production',
  apiVersion: '2022-10-03',
  useCdn: false,
});

const styles = {
  theRadius: {
    borderRadius: '25px',
  },
}


function HistoryOfCollaboration({ timelinePoint, footerContent, historyResources, collaborationTag }) {

  const [lang, setLang] = useState('en');


  const handleChange = (event) => {
        setLang(event.target.value);
        if (typeof window !== "undefined") {
            localStorage.setItem("langChoice", event.target.value);
            console.log("Set local language to: " + event.target.value);
        }
  };
  
  const checkLang = () => {
    if (typeof window !== "undefined") {
      var languageSelection = localStorage.getItem('langChoice');
      if(languageSelection != lang)
        setLang(languageSelection);
      console.log("Stored language is " + languageSelection);
    }
  }

  checkLang();
    
  const [tooltipContent, setTooltipContent] = useState("");
  
  const timelinePointL = timelinePoint.filter((point) => point.language === lang).length > 0 ? timelinePoint.filter((point) => point.language === lang) : timelinePoint.filter((point) => point.language === 'en');

  const collaborationTagL = collaborationTag.filter((tag) => tag.language === lang).length > 0 ? collaborationTag.filter((tag) => tag.language === lang) : collaborationTag.filter((tag) => tag.language === 'en');


  const footerContentL = footerContent.filter((footerContent) => footerContent.language == lang).length > 0 ? footerContent.filter((footerContent) => footerContent.language == lang) : footerContent.filter((footerContent) => footerContent.language == 'en');
  
  const historyResourcesL = historyResources.filter((historyResources) => historyResources.language == lang).length > 0 ? historyResources.filter((historyResources) => historyResources.language == lang) : historyResources.filter((historyResources) => historyResources.language == 'en');


  return (
    <>
      <Head>  
        <title>ABA: Contact & Collaboration</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="stylesheet" href="https://use.typekit.net/hco7ora.css" />
        <link rel="stylesheet" href="https://use.typekit.net/hco7ora.css" />


      </Head>
      <div style={{
        position: 'fixed',
        right: '0',
        zIndex: '100',
        marginTop: '2rem',
        marginRight: '1.5rem',
      }}>
                <Box sx={{ wdth: 120 }}>
                    <FormControl fullWidth>
                        <InputLabel id="demo-simple-select-label" >
                            {lang}
                        </InputLabel>
                        <Select
                            labelId="demo-simple-select-label"
                            id="demo-simple-select"
                            value={lang}
                            label="Language"
                            onChange={handleChange}
                        >
                            <MenuItem value={'en'}>English</MenuItem>
                            <MenuItem value={'zh'}>Chinese - Simplified</MenuItem>
                            <MenuItem value={'zh-tw'}>Chinese - Traditional</MenuItem>
                            <MenuItem value={'zh-cn'}>Cantonese</MenuItem>
                            <MenuItem value={'ko'}>Korean</MenuItem>
                            <MenuItem value={'ja'}>Japanse</MenuItem>
                            <MenuItem value={'vi'}>Vietnamese</MenuItem>
                            <MenuItem value={'tl'}>Tagalog</MenuItem>
                            <MenuItem value={'km'}>Khmer</MenuItem>


                        </Select>
                    </FormControl>
                </Box>
            </div>
      <Header />
      <Layout title={'Contact & Collaboration'} description={' '}>
        <div id='body'>
          <h1 style={{margin:  0}}>Contact & Collaboration</h1>
          <span style={{width: '70%', textAlign: 'center'}}>
                <p>In this interactive page, you will find historically significant Black-Asian interactions. Each event builds on each other to create continuous possibilities for a sustainable relationship. </p>
          </span>
          <CollaborationMap setTooltipContent={setTooltipContent}/>
          <ReactTooltip effect='solid' uuid='mytt' >{tooltipContent}</ReactTooltip>
          <h3 style={{fontSize: '1rem', marginBottom: 0}}>Please click on either marker to see a timeline of events. </h3>
          

          <div className='collapsed-content' id='asia'>
          {/* display all collaboration tags that have section = asia in a timeline */}
          <Timeline position="alternate">
              {collaborationTagL.map((tag) => (
                tag.section === 'asia' &&
              <TimelineItem key={collaborationTagL._id}>
                <TimelineOppositeContent>
                  <Typography variant="body2" color="text.secondary">
                    {tag.date}
                  </Typography>
                </TimelineOppositeContent>
                <TimelineSeparator>
                  <TimelineDot />
                  <TimelineConnector />
                </TimelineSeparator>
                <TimelineContent> 
                  <Paper elevation={3}  className="collabTag" sx={{borderRadius: '25px !important'}}>
                    <Typography variant="h2" component="span" fontSize='1.4rem' sx={{ textAlign: 'left' }}>
                      {tag.title}
                    </Typography>
                    <Typography>{tag.body}</Typography>
                    {/* display each link for this tag in a button */}
                    {tag.link.map((link) => (
                      <Button variant="contained" href={link} target="_blank" rel="noopener noreferrer" sx={{ m: 1, borderRadius: "25px", maxHeight: '25%' }}>
                        {/* if there is a link label display, otherwise "More Info" */}
                        {tag.linkLabel[tag.link.indexOf(link)] ? tag.linkLabel[tag.link.indexOf(link)] : "More Info"}
                      </Button>
                    ))}
                  </Paper>
                </TimelineContent>
              </TimelineItem>
            ))}
          </Timeline>
          </div>


          <div className='collapsed-content' id='northAmerica'>
          {/* display all collaboration tags that have section = northAmerica in a timeline */}
          <Timeline position="alternate">
              {collaborationTagL.map((tag) => (
                tag.section === 'northamerica' &&
              <TimelineItem key={collaborationTagL._id}>
                <TimelineOppositeContent>
                  <Typography variant="body2" color="text.secondary" style={{fontSize: '1.2rem'}}>
                    {tag.date}
                  </Typography>
                </TimelineOppositeContent>
                <TimelineSeparator>
                  <TimelineDot />
                  <TimelineConnector />
                </TimelineSeparator>
                <TimelineContent>
                  <Paper elevation={3} className="collabTag" sx={{borderRadius: '25px !important'}}>
                    <Typography variant="h2" component="span" fontSize='1.4rem' sx={{ textAlign: 'left' }}>
                      {tag.title}
                    </Typography>
                    <Typography>{tag.body}</Typography>
                    {/* display each link for this tag in a button */}
                    {tag.link.map((link) => (
                      <Button variant="contained" href={link} target="_blank" rel="noopener noreferrer" sx={{ m: 1, borderRadius: "25px", maxHeight: '25%' }}>
                        {/* if there is a link label display, otherwise "More Info" */}
                        {tag.linkLabel[tag.link.indexOf(link)] ? tag.linkLabel[tag.link.indexOf(link)] : "More Info"}
                        
                      </Button>
                    ))}
                  </Paper>
                </TimelineContent>
              </TimelineItem>
            ))}
          </Timeline>
          </div>


              
      

          {historyResourcesL?.map((historyResource) => (
            <div key={historyResource._id} style={{ margin: '2%' }}>
              <h1 style={{ textAlign: 'center', width: "100vw", paddingLeft: '5%' }}>{historyResource?.title}</h1>
              <div style={{textAlign: 'center', paddingLeft: '5%', paddingRight: '5%', alignItems: "center"}}> 
                {historyResource?.body}
              </div>
              {/* Display each link and linkLabel, display a button */}
              {/* Create a centered grid 2 columns wide, with repeating rows */}
              <Grid container style={{margin: 'auto', width: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexWrap: 'wrap'}}>
              
              {historyResource?.link && (
                historyResource?.link?.map((link) => (
                  <Button variant="contained" color="primary" className={"resource-button"} href={historyResource?.link[historyResource?.link.indexOf(link)]} target="_blank" rel="noopener noreferrer" style={{  width: '40%', margin: '2%', borderRadius: '25px' }} >
                    <div style={{textAlign: 'center' }}>
                    {/* Display the linkLabel if it exists, otherwise display "More Info" */}
                      {historyResource?.linkLabel && historyResource?.linkLabel[historyResource?.link.indexOf(link)] ? historyResource?.linkLabel[historyResource?.link.indexOf(link)] : "More Info"}
                    </div>
                  </Button>
                ))
                )}
              </Grid>
            </div>
          ))}
        </div>
        
        
        

      </Layout>

      <Footer
      link={
          footerContentL[0]?.link
        } body={
          footerContentL[0]?.body
        }/>
    </>
  )
}

export async function getStaticProps() {
  const timelinePoint = await client.fetch(`*[_type == "timelinePoint"] | order(order asc)`)
  const footerContent = await client.fetch(`*[_type == "footerContent"]  | order(order asc)`)
  const historyResources = await client.fetch(`*[_type == "historyResources" ]  | order(order asc)`)
  const collaborationTag = await client.fetch(`*[_type == "collaborationTag"]  | order(order asc)`)

  return {
    props: {
      timelinePoint,
      footerContent,
      historyResources,
      collaborationTag,
    },
    revalidate: 10,
  };
}

export default HistoryOfCollaboration

import React from 'react'
// import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'

import { useState } from 'react'

import { createClient } from 'next-sanity'

import styles from '../styles/Home.module.css'
import Header from '../public/components/header'
import Footer from '../public/components/footer.js'
import Layout from '../public/components/layout'

import dynamic from 'next/dynamic'



import Grid from '@mui/material/Grid';

import {
  ComposableMap,
  Geographies,
  Geography,
  ZoomableGroup,
  Marker
} from 'react-simple-maps';

import {
  Timeline,
  TimelineItem,
  TimelineDot,
  TimelineSeparator,
  TimelineConnector,
  TimelineContent,
  TimelineOppositeContent
} from '@mui/lab';

import { Button, Paper, Typography } from '@mui/material';
import CollaborationMap from '../public/components/collaborationMap.js'

// import Tooltip from '@mui/material/Tooltip'

// const ReactToolTip = dynamic(() => import('react-tooltip'), { ssr : false });


const client = createClient({
  projectId: 'hiagtp2f',
  dataset: 'production',
  apiVersion: '2022-10-03',
  useCdn: false,
});


function HistoryOfCollaboration({ timelinePoint, footerContent }) {
    
    const [tooltipContent, setTooltipContent] = useState("");
  return (
    <>
      <Head>  
        <title>ABA: History of Collaboration</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="stylesheet" href="https://use.typekit.net/hco7ora.css" />

      </Head>
      <Header />
      <Layout title={'History of Collaboration'} description={' '}>
        <div id='body'>
          <CollaborationMap setTooltipContent={setTooltipContent} />
          {/* <Tooltip className='card' title="add">{tooltipContent}</Tooltip> */}
          <h1>History of Collaboration</h1>
          <span style={{width: '70%', textAlign: 'center'}}>
                <p>This page integrates cultural and political transnational historically significant events on Asian and Black interactions. These events are not positive or negative. Rather, each builds on the others as continuation of possibilities to build a sustainable relationality between these two heterogeneous groups  </p>
          </span>
              
          <Timeline position="alternate" sx={{maxWidth: "100vw"}}>
            {timelinePoint?.map((timelinePoint) => (
              //if the timelinePoint has no date, insert a timeline separator
              timelinePoint?.date == null ? (
                <span
                  key={timelinePoint._id}
                  style={{ textAlign: "center"}}>
                  <h2>{timelinePoint?.body}</h2>
                </span>
              ) : (
              
              <TimelineItem key={timelinePoint._id} sx={{ margin: '2%' }}>
                <TimelineOppositeContent color="text.secondary" fontSize="1.2rem" display='flex' flexDirection="column">
                      {timelinePoint?.date}
                      {timelinePoint?.citation && (
                        timelinePoint?.citation?.map((citation) => (
                          <Button variant="outlined" color="primary" href={timelinePoint?.citation} target="_blank" rel="noopener noreferrer" style={{ marginLeft: '1rem', width: '50%', margin: 'auto', marginBottom: '5%' }} >
                            {/* Display the linkNote if it exists, otherwise display "More Info" */}
                            {timelinePoint?.linkNote ? timelinePoint?.linkNote : "More Info"}
                          </Button>
                        ))
                      )}
                </TimelineOppositeContent>
                <TimelineSeparator>
                  <TimelineDot />
                  <TimelineConnector />
                </TimelineSeparator>
                <TimelineContent style={{overflow: 'hidden'}}>
                  <Typography variant="h6" component="span" fontWeight="500">
                    {timelinePoint?.title}
                  </Typography>
                  <Typography>
                    {timelinePoint?.body}
                  </Typography>
                </TimelineContent>
              </TimelineItem>
            )))}
          </Timeline>
          <div style={{textAlign: 'left', width: "100vw", paddingLeft: '5%'}}>
            <h1 >Continuous Relationships Building</h1>
          </div>
        <div style={{textAlign: 'center', paddingLeft: '5%', paddingRight: '5%'}}> 
          <p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam lorem eros, iaculis at diam in, tempus imperdiet ligula. Cras eget gravida nibh. Nunc ut ex augue. Mauris vulputate neque et malesuada mattis. Donec quis ante elementum, porta dui a, feugiat arcu. Sed viverra a quam sit amet efficitur. Maecenas ac sem sit amet neque elementum cursus. Nullam eget metus eros. Aliquam efficitur ac tortor et iaculis. Nunc eget purus dolor. Nunc ac tellus nunc. Nulla eu facilisis tortor, a vulputate sapien.  </p>
          </div>

           <div style={{textAlign: 'right', width: "100vw", paddingRight: '5%'}}>
            <h1 >Additional Resources</h1>
          </div>
        <div style={{textAlign: 'center', paddingLeft: '5%', paddingRight: '5%'}}> 
          <p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam lorem eros, iaculis at diam in, tempus imperdiet ligula. Cras eget gravida nibh. Nunc ut ex augue. Mauris vulputate neque et malesuada mattis. Donec quis ante elementum, porta dui a, feugiat arcu. Sed viverra a quam sit amet efficitur. Maecenas ac sem sit amet neque elementum cursus. Nullam eget metus eros. Aliquam efficitur ac tortor et iaculis. Nunc eget purus dolor. Nunc ac tellus nunc. Nulla eu facilisis tortor, a vulputate sapien.  </p>
          </div>
        </div>
        
        
        

      </Layout>

      <Footer
      link={
          footerContent[0]?.link
        } body={
          footerContent[0]?.body
        }/>
    </>
  )
}

export async function getStaticProps() {
  const timelinePoint = await client.fetch(`*[_type == "timelinePoint"] | order(order asc)`)
  const footerContent = await client.fetch(`*[_type == "footerContent"]  | order(order asc)`)

  return {
    props: {
      timelinePoint,
      footerContent,
    },
    revalidate: 10,
  };
}

export default HistoryOfCollaboration

import React from 'react'
// import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'

import { useState } from 'react'

import { createClient } from 'next-sanity'

import styles from '../styles/Home.module.css'
import Header from '../public/components/header'
import Footer from '../public/components/footer.js'
import Layout from '../public/components/layout'

import dynamic from 'next/dynamic'


import Grid from '@mui/material/Grid';

import {
  ComposableMap,
  Geographies,
  Geography,
  ZoomableGroup,
  Marker
} from 'react-simple-maps';

import {
  Timeline,
  TimelineItem,
  TimelineDot,
  TimelineSeparator,
  TimelineConnector,
  TimelineContent,
  TimelineOppositeContent
} from '@mui/lab';

import { Button, Paper, Typography } from '@mui/material';
import CollaborationMap from '../public/components/collaborationMap.js'

const ReactTooltip = dynamic(() => import('react-tooltip'), { ssr: false });

// import Tooltip from '@mui/material/Tooltip'

// const ReactToolTip = dynamic(() => import('react-tooltip'), { ssr : false });


const client = createClient({
  projectId: 'hiagtp2f',
  dataset: 'production',
  apiVersion: '2022-10-03',
  useCdn: false,
});


function HistoryOfCollaboration({ timelinePoint, footerContent, historyResources }) {
    
    const [tooltipContent, setTooltipContent] = useState("");
  return (
    <>
      <Head>  
        <title>ABA: Contact & Collaboration</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="stylesheet" href="https://use.typekit.net/hco7ora.css" />
        <link rel="stylesheet" href="https://use.typekit.net/hco7ora.css" />


      </Head>
      <Header />
      <Layout title={'Contact & Collaboration'} description={' '}>
        <div id='body'>
          <CollaborationMap setTooltipContent={setTooltipContent}/>
          <ReactTooltip effect='solid' uuid='mytt' >{tooltipContent}</ReactTooltip>
          <h1>Contact & Collaboration</h1>
          <span style={{width: '70%', textAlign: 'center'}}>
                <p>This page integrates cultural and political transnational historically significant events on Asian and Black interactions. These events are not positive or negative. Rather, each builds on the others as continuation of possibilities to build a sustainable relationality between these two heterogeneous groups  </p>
          </span>
              
          <Timeline position="alternate" sx={{maxWidth: "100vw", display: "none"}}>
            {timelinePoint?.map((timelinePoint) => (
              //if the timelinePoint has no date, insert a timeline separator
              timelinePoint?.date == null ? (
                <span
                  key={timelinePoint._id}
                  style={{ textAlign: "center"}}>
                  <h2>{timelinePoint?.body}</h2>
                </span>
              ) : (
              
              <TimelineItem key={timelinePoint._id} sx={{ margin: '2%' }}>
                <TimelineOppositeContent color="text.secondary" fontSize="1.2rem" display='flex' flexDirection="column">
                      {timelinePoint?.date}
                      {timelinePoint?.citation && (
                        timelinePoint?.citation?.map((citation) => (
                          <Button variant="contained" color="primary" href={timelinePoint?.citation[timelinePoint?.citation.indexOf(citation)]} target="_blank" rel="noopener noreferrer" style={{ marginLeft: '1rem', width: '50%', margin: 'auto', marginBottom: '5%' }} >
                            <div style={{textAlign: 'center' }}>
                            {/* Display the linkNote if it exists, otherwise display "More Info" */}
                              {timelinePoint?.linkNote && timelinePoint?.linkNote[timelinePoint?.citation.indexOf(citation)] ? timelinePoint?.linkNote[timelinePoint?.citation.indexOf(citation)] : "More Info"}
                              </div>
                          </Button>
                        ))
                      )}
                </TimelineOppositeContent>
                <TimelineSeparator>
                  <TimelineDot />
                  <TimelineConnector />
                </TimelineSeparator>
                <TimelineContent style={{overflow: 'hidden'}}>
                  <Typography variant="h6" component="span" fontWeight="500">
                    {timelinePoint?.title}
                  </Typography>
                  <Typography>
                    {timelinePoint?.body}
                  </Typography>
                </TimelineContent>
              </TimelineItem>
            )))}
          </Timeline>

          {historyResources?.map((historyResource) => (
            <div key={historyResource._id} style={{ margin: '2%' }}>
              <h1 style={{ textAlign: 'left', width: "100vw", paddingLeft: '5%' }}>{historyResource?.title}</h1>
              <div style={{textAlign: 'center', paddingLeft: '5%', paddingRight: '5%', alignItems: "center"}}> 
                {historyResource?.body}
              </div>
              {/* Display each link and linkLabel, display a button */}
              {/* Create a centered grid 2 columns wide, with repeating rows */}
              <Grid container spacing={2} style={{margin: 'auto', width: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexWrap: 'wrap'}}>
              
              {historyResource?.link && (
                historyResource?.link?.map((link) => (
                  <Button variant="contained" color="primary" href={historyResource?.link[historyResource?.link.indexOf(link)]} target="_blank" rel="noopener noreferrer" style={{ marginLeft: '1rem', width: '30%', margin: 'auto', margin: '5%' }} >
                    <div style={{textAlign: 'center' }}>
                    {/* Display the linkLabel if it exists, otherwise display "More Info" */}
                      {historyResource?.linkLabel && historyResource?.linkLabel[historyResource?.link.indexOf(link)] ? historyResource?.linkLabel[historyResource?.link.indexOf(link)] : "More Info"}
                    </div>
                  </Button>
                ))
                )}
              </Grid>
            </div>
          ))}
        </div>
        
        
        

      </Layout>

      <Footer
      link={
          footerContent[0]?.link
        } body={
          footerContent[0]?.body
        }/>
    </>
  )
}

export async function getStaticProps() {
  const timelinePoint = await client.fetch(`*[_type == "timelinePoint"] | order(order asc)`)
  const footerContent = await client.fetch(`*[_type == "footerContent"]  | order(order asc)`)
  const historyResources = await client.fetch(`*[_type == "historyResources"]  | order(order asc)`)

  return {
    props: {
      timelinePoint,
      footerContent,
      historyResources,
    },
    revalidate: 10,
  };
}

export default HistoryOfCollaboration

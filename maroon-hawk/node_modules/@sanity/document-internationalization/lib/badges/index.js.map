{"version":3,"file":"index.js","sources":["../../src/constants/ReferenceBehavior.ts","../../src/constants/IdStructure.ts","../../src/utils/getSchema.ts","../../src/utils/getConfig.ts","../../src/utils/getLanguageFromDocument.ts","../../src/badges/LanguageBadge.tsx","../../src/badges/index.ts"],"sourcesContent":["export enum ReferenceBehavior {\n  STRONG = 'strong',\n  WEAK = 'weak',\n  DISABLED = 'disabled',\n}\n","export enum IdStructure {\n  SUBPATH = 'subpath',\n  DELIMITER = 'delimiter',\n}\n","import schemas from 'part:@sanity/base/schema'\nimport {TSchema} from '../types'\n\nexport const getSchema = <T = any>(name: string): TSchema<T> => {\n  return schemas._original.types.find((s) => s.name === name)\n}\n","import config from 'config:@sanity/document-internationalization'\nimport {Ti18nSchema, Ti18nConfig} from '../types'\nimport {IdStructure, ReferenceBehavior} from '../constants'\nimport {getSchema} from './getSchema'\n\nconst getI18nConfigFromType = (type?: string | Ti18nSchema) => {\n  let i18nconfig: Ti18nConfig = {}\n\n  if (type) {\n    if (typeof type === 'string') {\n      const schema = getSchema<Ti18nSchema>(type)\n      if (schema && typeof schema.i18n !== 'boolean') {\n        i18nconfig = schema.i18n\n      }\n    } else if (typeof type.i18n !== 'boolean') {\n      i18nconfig = type.i18n\n    }\n  }\n\n  return i18nconfig\n}\n\nexport function getConfig(type?: string | Ti18nSchema): Required<{\n  [K in keyof Ti18nConfig]: Required<Ti18nConfig[K]>\n}> & {\n  withTranslationsMaintenance: boolean\n} {\n  const schemaConfig = getI18nConfigFromType(type)\n  const cfg = config\n\n  return {\n    base: schemaConfig?.base || cfg?.base || '',\n    idStructure: cfg.idStructure || IdStructure.DELIMITER,\n    referenceBehavior: cfg.referenceBehavior || ReferenceBehavior.STRONG,\n    withTranslationsMaintenance: cfg?.withTranslationsMaintenance === true,\n    fieldNames: {\n      lang: schemaConfig?.fieldNames?.lang || cfg?.fieldNames?.lang || '__i18n_lang',\n      references:\n        schemaConfig?.fieldNames?.references || cfg?.fieldNames?.references || '__i18n_refs',\n      baseReference:\n        schemaConfig?.fieldNames?.baseReference || cfg?.fieldNames?.baseReference || '__i18n_base',\n    },\n    languages: schemaConfig?.languages || cfg?.languages || [],\n  }\n}\n","import type {SanityDocument} from '@sanity/client'\nimport type {getConfig} from './getConfig'\n\nexport function getLanguageFromDocument(\n  doc: SanityDocument,\n  config: ReturnType<typeof getConfig>\n): string | null {\n  return doc?.[config.fieldNames.lang] || config.base || null\n}\n","import {IResolverProps} from '../types'\nimport {getConfig, getLanguageFromDocument} from '../utils'\n\nexport const LanguageBadge = (props: IResolverProps) => {\n  const config = getConfig(props.type)\n  const doc = props.draft || props.published\n  const lang = doc ? getLanguageFromDocument(doc, config) : null\n  if (lang) {\n    return {\n      label: lang,\n      color: 'success',\n    }\n  }\n\n  return null\n}\n","import defaultResolve from 'part:@sanity/base/document-badges'\nimport {LanguageBadge} from './LanguageBadge'\nimport {IResolverProps} from '../types'\n\nconst resolver = (props: IResolverProps) => {\n  return [...defaultResolve(props), LanguageBadge]\n}\n\nexport default resolver\nexport {LanguageBadge}\n"],"names":["ReferenceBehavior","IdStructure","getSchema","name","schemas","_original","types","find","s","getI18nConfigFromType","type","i18nconfig","schema","i18n","getConfig","schemaConfig","cfg","config","base","idStructure","DELIMITER","referenceBehavior","STRONG","withTranslationsMaintenance","fieldNames","lang","references","baseReference","languages","getLanguageFromDocument","doc","LanguageBadge","props","draft","published","label","color","resolver","_toConsumableArray","defaultResolve"],"mappings":"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"}